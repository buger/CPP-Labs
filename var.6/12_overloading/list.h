/*
   Заголовочный файл для класса List
   Содержит описание класса и элемента списка
*/

#ifndef __LIST_H__
#define __LIST_H__


//Структура элемента списка
struct Node
{
    int data;   // информационное поле
    Node *next;	// указатель на следующий элемент списка
};

// Создание синонима NodePtr для указателя на нашу структуру Node
typedef Node* NodePtr;

class List
{
public:
    NodePtr head;	// указатель на начало списка

    // Конструктор для создания списка по кол-ву элементов
    List (int);

    // Конструктор для создания путем копирования другого списка
    List (List&);

    // Вывод списка
    void print();
    
    // Оператор из условия задачи
    List& operator & (List&);	

    // Удаление элемента из списка, по индексу
    void exclude(int);

    // Деструктор, вызывается перед удалением объекта
    ~List();
};
#endif

